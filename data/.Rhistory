.libPaths()
ggplot(data=diamonds, aes(x=cut, fill=cut)) + geom_bar()
require(ggplo2t)
install.packages("ggplot2")
require(ggplot2)
diamond
diamonds
ggplot(data=diamonds, aes(x=cut, fill=cut)) + geom_bar()
ggplot(data=diamonds, aes(x=color, fill=cut)) + geom_bar()
str(diamonds)
lirary(data.table)
library(data.table)
diamondsDT <- as.data.table(diamonds)
diamondsDT
diamonds$Count <- 0L
diamondsDF <- aggregate(data=diamonds, Count ~ color + cut, FUN=length)
diamondsDF
do.call(rbind, lapply(split(diamondsDF, diamondsDF$cut),
function(x) within(x, Pct <- Count/sum(Count))))
ggplot(diamondsDF, aes(x=color, y=Pct, fill=cut)) + geom_bar(stat='identity')
diamondsDF
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$cut),
function(x) within(x, Pct <- Count/sum(Count))))
diamondsDF
ggplot(diamondsDF, aes(x=color, y=Pct, fill=cut)) + geom_bar(stat='identity')
ggplot(diamondsDF, aes(x=color, y=cumsum(Pct), fill=cut)) + geom_bar(stat='identity')
diamondsDF <- aggregate(data=diamonds, Count ~ color + cut, FUN=length)
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$color),
function(x) within(x, Pct <- Count/sum(Count))))
ggplot(diamondsDF, aes(x=color, y=Pct, fill=cut)) + geom_bar(stat='identity')
ggplot(data=diamonds, aes(x=color, fill=cut)) + geom_bar() + theme_bw()
ggplot(data=diamonds, aes(x=color, fill=cut)) + geom_bar() + theme_minimal()
ggplot(data=diamonds, aes(x=color, fill=cut)) + geom_bar() + element_blank()
diamondsDF
diamondsDT
diamondsDT
diamondsDT[, list(pct=.N), by="color"]
diamondsDT[, list(pct=.N), by="color,cut"]
diamondsDT[, list(count=.N), by="color,cut"]
diamondsDT[, list(cnt=.N), by="color,cut"]
diamondsDT <- as.data.table(diamonds)
diamondsDT <- diamondsDT[, list(cnt=.N), by="color,cut"]
diamondsDT
diamondsDT
diamondsDT[, pct:=cnt / sum(cnt), by="color"]
diamondsDT
head(diamondsDT)
table(diamonds$color, diamonds$cut)
?table
table(diamonds$color, diamonds$cut)
table(diamonds$color, diamonds$cut)
CT <- table(diamonds$color, diamonds$cut)
melt(CT)
melt(CT)
melt(table(diamonds$color, diamonds$cut))
DT <- melt(table(diamonds$color, diamonds$cut))
?melt
DT <- melt(table(diamonds$color, diamonds$cut), variable.names="1")
DT
DT <- melt(table(diamonds$color, diamonds$cut), variable.name="1")
DT
DT <- melt(table(diamonds$color, diamonds$cut), value.name="1")
DT
DT <- melt(table(diamonds$color, diamonds$cut), value.name="cnt")
DT
table(diamonds$color, diamonds$cut)
DT <- melt(table(diamonds$color, diamonds$cut), id.vars=1:5, value.name="cnt")
DT
DT <- melt(table(diamonds$color, diamonds$cut), value.name="cnt", )
DT
DT <- melt(table(diamonds$color, diamonds$cut), value.name="cnt")
DT
DT[, pct:=cnt / sum(cnt), by="color"]
DT[, pct:=cnt / sum(cnt), by="Var1"]
DT <- melt(table(diamonds$color, diamonds$cut), value.name="cnt")
DT
DT[, pct:=cnt / sum(cnt), by="Var1"]
str(DT)
DT <- as.data.table(melt(table(diamonds$color, diamonds$cut), value.name="cnt"))
DT
DT[, pct:=cnt / sum(cnt), by="Var1"]
DT
diamondsDT
library(dplyr)
install.packages("dplyr")
summarise(group_by(diamonds, color, cut), Count=n())
library(dplyr)
summarise(group_by(diamonds, color, cut), Count=n())
DP <- summarise(group_by(diamonds, color, cut), cnt=n())
DP <- mutate(DP, pct=cnt / sum(cnt))
DP
library(sqldf)
install.packages("sqldf")
library(sqldf)
options("gsubfn.engine")
options("width")
tmp1 <- sqldf('select color, cut, count(*) as Count from diamonds group by color, cut')
tmp1
tmp1 <- sqldf('select color, cut, count(*) as cnt from diamonds group by color, cut')
tmp2 <- sqldf('select color, sum(cnt) as cnt_by_color from tmp1 group by color')
tmp2
sqldf('select tmp1.color, cut, cnt, (cnt*1.0 / cnt_by_color) as pct
from tmp1 join tmp2 on tmp1.color = tmp2.color') -> DFSQL
DFSQL
ggplot(diamondsDF, aes(x=color, y=pct, fill=cut)) + geom_bar(stat='identity')
diamondsDF
ggplot(diamondsDF, aes(x=color, y=pct, fill=cut)) + geom_bar(stat='identity')
diamondsDF
diamonds$Count <- 0L
diamondsDF <- aggregate(data=diamonds, Count ~ color + cut, FUN=length)
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$color),
function(x) within(x, pct <- Count/sum(Count))))
head(diamondsDF)
ggplot(diamondsDF, aes(x=color, y=pct, fill=cut)) + geom_bar(stat='identity')
table(diamonds$color, diamonds$cut)
stack(table(diamonds$color, diamonds$cut))
?stack
stack(table(diamonds$color, diamonds$cut))
table(diamonds$color, diamonds$cut)
stack(as.data.frame(table(diamonds$color, diamonds$cut)))
as.data.frame(table(diamonds$color, diamonds$cut))
stack(as.data.frame(table(diamonds$color, diamonds$cut)), select=1:3
)
as.data.frame(table(diamonds$color, diamonds$cut))
as.data.table(table(diamonds$color, diamonds$cut))
as.data.frame(table(diamonds$color, diamonds$cut))
DF <- as.data.frame(table(diamonds$color, diamonds$cut))
table(diamonds$color, diamonds$cut)
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("a", "b")))
DF
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("color", "cut")))
DF
table(diamonds$color, diamonds$cut, dnn=list("color", "cut"))
DF
diamonds$Count <- 0L
diamondsDF <- aggregate(data=diamonds, cnt ~ color + cut, FUN=length)
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$color),
function(x) within(x, pct <- Count/sum(cnt))))
head(diamondsDF)
diamonds$cnt <- 0L
diamondsDF <- aggregate(data=diamonds, cnt ~ color + cut, FUN=length)
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$color),
function(x) within(x, pct <- Count/sum(cnt))))
head(diamondsDF)
diamonds$cnt <- 0L
diamondsDF <- aggregate(data=diamonds, cnt ~ color + cut, FUN=length)
diamondsDF <- do.call(rbind, lapply(split(diamondsDF, diamondsDF$color),
function(x) within(x, pct <- cnt / sum(cnt))))
head(diamondsDF)
DF
aggregate(data=DF, Freq ~ color, FUN=function(x) Freq / sum(Freq))
DF
aggregate(data=DF, Freq ~ color, FUN=function(x) Freq / sum(Freq))
aggregate(data=DF, Freq ~ color, FUN=function(x) x / sum(x))
aggregate(data=DF,  ~ color, FUN=function(x) x / sum(x))
DF
split(DF, DF$color)
lapply(split(DF, DF$color), function(x) within(x, pct <- cnt / sum(cnt)))
lapply(split(DF, DF$color), function(x) within(x, pct <- Freq / sum(Freq)))
DF
lapply(split(DF, DF$color), function(x) within(x, pct <- Freq / sum(Freq)))
DF
aggregate(data=diamonds, cnt ~ color + cut, FUN=length)
?rapply
?tapply
?by
by(DF, DF$color, length)
by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)))
DF <- by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)))
DF
str(DF)
DF <- by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)), simplify=F)
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("color", "cut")))
DF <- by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)), simplify=F)
DF
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("color", "cut")))
DF <- by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)), simplify=T)
DF
do.call(rbind, DF)
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("color", "cut")))
DF <- by(DF, DF$color, function(x) within(x, pct <- Freq / sum(Freq)))
DF <- do.call(rbind, DF)
head(DF)
DF <- as.data.frame(table(diamonds$color, diamonds$cut, dnn=list("color", "cut")))
DF <- do.call(rbind, by(DF, DF$color,
function(x) within(x, pct <- Freq / sum(Freq))))
head(DF)
?by
ave
diamonds
ave(diamonds, color, cut)
?with
ave(diamonds, diamonds$color)
?ave
head(diamonds)
diamonds$cnt <- 1L
ave(diamonds$cnt, diamonds$color, FUN=sum)
ave(diamonds$cnt[1:10], diamonds$color[1:10], FUN=sum)
diamonds[1:10,]
ave(diamonds$cnt[1:10], diamonds$color[1:10], diamonds$cut, FUN=sum)
ave(diamonds$cnt[1:10], diamonds$color[1:10], diamonds$cut[1:!0], FUN=sum)
ave(diamonds$cnt[1:10], diamonds$color[1:10], diamonds$cut[1:10], FUN=sum)
ave(diamonds$cnt, diamonds$color, diamonds$cut, FUN=sum)[1:10]
ave(1, diamonds$color, diamonds$cut, FUN=sum)
ave(1:nrow(diamonds), diamonds$color, diamonds$cut, FUN=sum)
diamonds$cnt <- ave(1:nrow(diamonds), diamonds$color, diamonds$cut, FUN=sum)
diamonds[1:10,]
diamonds$cnt <- ave(rep(1, nrow(diamonds)), diamonds$color, diamonds$cut, FUN=sum)
diamonds[1:10,]
DF
diamonds$cntsum <- ave(diamonds$cnt, diamonds$color, FUN=sum)
diamonds[1:10,]
with(diamonds, pct <- cnt / cntsum)
diamonds
head(diamonds)
pct
with(diamonds, pct <- cnt / cntsum)
diamonds
str(diamonds)
?transform
transform(diamonds, pct <- cnt / cntsum)
tt <- transform(diamonds, pct <- cnt / cntsum)
str(tt)
tt <- transform(diamonds, pct=cnt / cntsum)
str(tt)
head(tt)
diamonds$cnt <- ave(rep(1, nrow(diamonds)), diamonds$color, diamonds$cut, FUN=sum)
head(diamonds)
diamonds$cntsum <- ave(diamonds$cnt, diamonds$color, FUN=sum)
head(diamonds)
diamonds[diamonds$color == "E",]
sum(diamonds[diamonds$color == "E","cnt"])
head(diamonds)
diamonds$cnt_by_color <- ave(diamonds$cnt, diamonds$color, FUN=sum)
head(diamonds)
3903 / 27375643
DT
DT[Var1 == "E"]
diamonds$cnt_by_color <- ave(rep(1, nrow(diamonds)), diamonds$color, FUN=sum)
head(diamonds)
tt <- transform(diamonds, pct=cnt / cnt_by_color)
head(tt)
transform(diamonds, pct=cnt / cnt_by_color)
?with
?ave
head(diamonds)
unique(diamonds[,c("color", "cut", "pct")])
diamonds$cnt <- ave(rep(1, nrow(diamonds)), diamonds$color, diamonds$cut, FUN=sum)
diamonds$cnt_by_color <- ave(rep(1, nrow(diamonds)), diamonds$color, FUN=sum)
diamonds <- transform(diamonds, pct=cnt / cnt_by_color)
unique(diamonds[,c("color", "cut", "pct")])
head(DT)
diamonds$cnt <- ave(rep(1, nrow(diamonds)), diamonds$color, diamonds$cut, FUN=sum)
diamonds$cnt_by_color <- ave(rep(1, nrow(diamonds)), diamonds$color, FUN=sum)
diamonds <- transform(diamonds, pct=cnt / cnt_by_color)
DFave <- unique(diamonds[,c("color", "cut", "pct")])
head(DFave)
DFave
DFave <- unique(diamonds[,c("color", "cut", "cnt", "pct")])
head(DFave)
DF
DT
getwd()
setwd("~/Dropbox/DSC2015/ggplot_lecture/data/")
dir()
grep("Taipei", dir(), value=TRUE)
fname_taipei <- grep("Taipei", dir(), value=TRUE)
library(data.table)
fname_taipei <- grep("Taipei", dir(), value=TRUE)
dat <- rbindlist(lapply(fname_taipei, fread))
dat
summary(dat)
dir()
gsub("_.*", '', dir())
unique(gsub("_.*", '', dir()))
citynames <- unique(gsub("_.*", '', dir()))
citynames
citynames <- citynames[1:4] # take english version
citynames
dir() $in$ citynames
dir() %in% citynames
match(dir(), citynames)
?match
charmatch(dir(), citynames)
charmatch("a", citynames)
citynames
charmatch("Taipei", citynames)
pmatch("Taipei", citynames)
pmatch("aipei", citynames)
pmatch("Tai", citynames)
citynames
dir()
for ( city in citynames ) {
grep(city, dir(), value=TRUE)
}
for ( city in citynames ) {
print(grep(city, dir(), value=TRUE))
}
for ( city in citynames ) {
cityfiles <- grep(city, dir(), value=TRUE)
dat <- rbindlist(lapply(cityfiles, fread))
}
dat
str(dat)
for ( city in citynames ) {
cityfiles <- grep(city, dir(), value=TRUE)
dat[[city]] <- rbindlist(lapply(cityfiles, fread))
}
dat <- list()
for ( city in citynames ) {
cityfiles <- grep(city, dir(), value=TRUE)
dat[[city]] <- rbindlist(lapply(cityfiles, fread))
}
dat
rbindlist(dat)
rbindlist(dat, idcol="city")
citynames <- unique(gsub("_.*", '', dir()))
citynames <- citynames[1:4] # take english version only
dat <- list()
for ( city in citynames )
dat[[city]] <- rbindlist(lapply(grep(city, dir(), value=TRUE), fread))
dat <- rbindlist(dat, idcol="city")
dat
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
citynames <- unique(gsub("_.*", '', dir(src_path)))
citynames <- citynames[1:4] # take english version only
dat <- list()
for ( city in citynames )
dat[[city]] <- rbindlist(lapply(grep(city, dir(src_path), value=TRUE), fread))
dat <- rbindlist(dat, idcol="city")
dat
summary(dat)
dat[, sum(PrecpHour), by="city"]
dat[, list(PrecpHour=sum(PrecpHour)), by="city"]
tt <- dat[, list(PrecpHour=sum(PrecpHour)), by="city"]
ggplot(tt, aes(x=city, y=PrecpHour)) + geom_bar(stat="identity")
summary(dat$Precp)
table(dat$Precp)
dat[Precp == 'T']
dat[Precp == 'T', Precp:=0]
dat[Precp == 'T', Precp:='0']
dat[, Precp:=as.numeric(Precp)]
summary(dat)
tt <- dat[, list(PrecpHour=sum(PrecpHour),
Precp=sum(Precp)), by="city"]
ggplot(tt, aes(x=city, y=PrecpHour)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=Precp)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=Precp)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=PrecpHour)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=Precp)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=PrecpHour)) + geom_bar(stat="identity")
ggplot(tt, aes(x=city, y=Precp)) + geom_bar(stat="identity")
str(dat)
ggplot(tt, aes(x=city, y=SunShine)) + geom_bar(stat="identity")
tt <- dat[, list(PrecpHour=sum(PrecpHour),
Precp=sum(Precp),
SunShine=sum(SunShine)), by="city"]
ggplot(tt, aes(x=city, y=SunShine)) + geom_bar(stat="identity")
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
citynames <- unique(gsub("_.*", '', dir(src_path)))
citynames <- citynames[1:4] # take english version only
dat <- list()
for ( city in citynames )
dat[[city]] <- rbindlist(lapply(grep(city, dir(src_path), value=TRUE), fread))
dat <- rbindlist(dat, idcol="city")
dat
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
citynames <- unique(gsub("_.*", '', dir(src_path, full.names=TRUE)))
citynames <- citynames[1:4] # take english version only
dat <- list()
for ( city in citynames )
dat[[city]] <- rbindlist(lapply(grep(city, dir(src_path, full.names=TRUE), value=TRUE), fread))
dat <- rbindlist(dat, idcol="city")
dir(src_path, full.names=TRUE)
dat
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
citynames <- unique(gsub("_.*", '', dir(src_path, full.names=TRUE)))
citynames <- citynames[1:4] # take english version only
citynames
src_path <- "/Users/kylechung/Dropbox/DSC2015/ggplot_lecture/data"
citynames <- unique(gsub("_.*", '', dir(src_path)))
citynames
citynames <- citynames[1:4] # take english version only
for ( var in c("PrecpHour", "Precp", "SunShine") )
ggplot(tt, aes_string(x="city", y=var)) + geom_bar(stat="identity")
for ( var in c("PrecpHour", "Precp", "SunShine") )
print(ggplot(tt, aes_string(x="city", y=var)) + geom_bar(stat="identity"))
